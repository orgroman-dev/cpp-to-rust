name: Build 3rd party projects to LLVM IR

on: 
    workflow_dispatch:
    push:

jobs:
    build-clang-llvm:
        name: Compile cpp projects to LLVM IR
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                submodules: 'true'

            - name: Set up Clang
              uses: egor-tensin/setup-clang@v1

            - name: Configure the project
              run: |
                mkdir -p 3rdparty/rapidjson/out
                cd 3rdparty/rapidjson/out
                cmake \
                  -DCMAKE_C_COMPILER=clang \
                  -DCMAKE_CXX_COMPILER=clang++ \
                  -DRAPIDJSON_BUILD_DOC=OFF \
                  -DRAPIDJSON_BUILD_EXAMPLES=OFF \
                  -DRAPIDJSON_BUILD_TESTS=OFF \
                  ..

            - name: Build the project
              run: |
                cd 3rdparty/rapidjson/out
                make

            - name: Compile test.cpp to LLVM IR
              run: |
                clang++ -S -emit-llvm -I./3rdparty/rapidjson/include include-rapidjson.cpp

            - name: Find LLVM IR files
              run: |
                  find ./ -name "*.ll"

            - name: Save LLVM IR as artifact
              uses: actions/upload-artifact@v2
              with:
                  name: llvm-ir-artifact
                  path: ./**/*.ll
