name: Build 3rd party projects to LLVM IR

on: 
    workflow_dispatch

jobs:
    build-clang-llvm:
        name: Compile cpp projects to LLVM IR
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                submodules: 'true'

            - name: Set up Clang
              uses: egor-tensin/setup-clang@v1

            - name: Configure the project
              run: |
                echo 'set(CMAKE_C_COMPILER clang)' >> llvm-toolchain.cmake
                echo 'set(CMAKE_CXX_COMPILER clang++)' >> llvm-toolchain.cmake
                echo 'set(CMAKE_C_FLAGS "-emit-llvm")' >> llvm-toolchain.cmake
                echo 'set(CMAKE_CXX_FLAGS "-emit-llvm")' >> llvm-toolchain.cmake
                echo 'set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)' >> llvm-toolchain.cmake
                echo 'set(CMAKE_C_COMPILER_WORKS 1)' >> llvm-toolchain.cmake
                echo 'set(CMAKE_CXX_COMPILER_WORKS 1)' >> llvm-toolchain.cmake
                mkdir -p 3rdparty/rapidjson/out
                cd 3rdparty/rapidjson/out
                cmake -DCMAKE_TOOLCHAIN_FILE=../../../llvm-toolchain.cmake ..
            
            - name: Build the project
              run: |
                  cd 3rdparty/rapidjson/out
                  make
                  
            - name: Save LLVM IR as artifact
              uses: actions/upload-artifact@v2
              with:
                name: llvm-ir-artifact
                path: ./3rdparty/rapidjson/out/*.ll

                